{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","listadoHoras","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","seleccionarHora","obtenerHorasDisponibles","json","id","horaSeleccionada","onclick","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","appendChild","noResultados","mostrarPonentes","obtenerPonente","ponenteDOM","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const horas = document.querySelector('#horas')\r\n\r\n    if(horas){\r\n\r\n\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        \r\n        \r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach( dia => dia.addEventListener('change', terminoBusqueda));\r\n\r\n        let busqueda = {\r\n            categoria_id: +categoria.value || '',\r\n            dia: +inputHiddenDia.value || ''\r\n        }\r\n        \r\n        if(!Object.values(busqueda).includes('')){\r\n\r\n            (async() => {\r\n                \r\n                await buscarEventos();\r\n\r\n                const id = inputHiddenHora.value;\r\n                \r\n                //Resaltar la hora actual\r\n                const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`);\r\n                \r\n                horaSeleccionada.classList.remove('horas__hora--deshabilitada');\r\n                horaSeleccionada.classList.add('horas__hora--seleccionada');\r\n\r\n                horaSeleccionada.onclick = seleccionarHora;\r\n            })();\r\n        }\r\n        \r\n\r\n\r\n        function terminoBusqueda(e){\r\n            \r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            //Reiniciar los campos ocultos y el selector de horas\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n            if(horaPrevia){\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n            \r\n            if(Object.values(busqueda).includes('')){\r\n                return;\r\n            }\r\n            buscarEventos();\r\n\r\n        }\r\n\r\n        async function buscarEventos(){\r\n            const {dia, categoria_id} = busqueda;\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n            \r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n            \r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos){\r\n            //Reiniciar horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'))\r\n            //Comprobar eventos ya tomados, y quitar la variable de deshabilitado\r\n            const horasTomadas = eventos.map( evento => evento.hora_id);\r\n            \r\n            \r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\r\n            resultado.forEach( li=> li.classList.remove('horas__hora--deshabilitada'));\r\n\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)')\r\n            \r\n            horasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora));\r\n\r\n        }\r\n\r\n        function seleccionarHora(e){\r\n            //Deshabilitar hora previa si hay nuevo click\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n\r\n            if(horaPrevia){\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n            //Agregar clase de seleccionado\r\n           e.target.classList.add('horas__hora--seleccionada');\r\n           inputHiddenHora.value = e.target.dataset.horaId;\r\n           inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n        }\r\n    }\r\n\r\n})();","(function(){\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n    \r\n    if(ponentesInput){\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n        const listadoPonentes = document.querySelector('#listado-ponentes');\r\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]')\r\n        \r\n        obtenerPonentes();\r\n\r\n        ponentesInput.addEventListener('input', buscarPonentes)\r\n\r\n        if(ponenteHidden.value){\r\n            (async() => {\r\n                const ponente = await obtenerPonente(ponenteHidden.value);    \r\n                const {nombre, apellido} = ponente;\r\n\r\n                const ponenteDOM = document.createElement('LI');\r\n                ponenteDOM.classList.add('listado-ponentes__ponente', 'listado-ponentes__ponente--seleccionado');\r\n                ponenteDOM.textContent = `${nombre} ${apellido}`;\r\n                \r\n                listadoPonentes.appendChild(ponenteDOM);\r\n            })();\r\n        }\r\n\r\n        async function obtenerPonentes(){\r\n\r\n            const url = `/api/ponentes`;\r\n            \r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            \r\n            formatearPonentes(resultado);\r\n        }\r\n\r\n        async function obtenerPonente(id){\r\n\r\n            const url = `/api/ponente?id=${id}`;\r\n            \r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            \r\n            return resultado;\r\n        }\r\n\r\n        function formatearPonentes(arrayPonentes){\r\n            ponentes = arrayPonentes.map( ponente => {\r\n                return{\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            })\r\n        }\r\n\r\n        function buscarPonentes(e){\r\n            const busqueda = e.target.value;\r\n\r\n            if(busqueda.length >= 3){\r\n                const expresion = new RegExp(busqueda, \"i\");\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if(ponente.nombre.toLowerCase().search(expresion) != -1){\r\n                        return ponente;\r\n                    }\r\n                \r\n                })\r\n\r\n            }else{\r\n                ponentesFiltrados = [];\r\n            }\r\n\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function mostrarPonentes(){\r\n            while(listadoPonentes.firstChild){\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n            }\r\n            \r\n            if(ponentesFiltrados.length > 0 ){\r\n                ponentesFiltrados.forEach( ponente => {\r\n                    const ponenteHTML = document.createElement('LI');\r\n                    ponenteHTML.classList.add('listado-ponentes__ponente');\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id;\r\n                    ponenteHTML.onclick = seleccionarPonente;\r\n\r\n                //Aniadir al DOM\r\n                listadoPonentes.appendChild(ponenteHTML);\r\n                })\r\n            }else{\r\n                const noResultados = document.createElement('P');\r\n                noResultados.classList.add('listado-ponentes__no-resultado')\r\n                noResultados.textContent = 'No hay resultados para tu busqueda'\r\n\r\n                listadoPonentes.appendChild(noResultados);\r\n            }\r\n        }\r\n\r\n        function seleccionarPonente(e){\r\n            const ponente = e.target;\r\n\r\n            //Remover la clase previa\r\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado')\r\n\r\n            if(ponentePrevio){\r\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n            }\r\n\r\n\r\n            ponente.classList.add('listado-ponentes__ponente--seleccionado');\r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n        }\r\n    }\r\n\r\n})();","(function (){\r\n    \r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    if(tagsInput){\r\n\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = []; \r\n\r\n        //Recuperar del input oculto\r\n        if(tagsInputHidden.value !== ''){\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n\r\n        }\r\n\r\n        //Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag)\r\n    \r\n        function guardarTag(e){\r\n            if(e.keyCode === 44){\r\n\r\n                if(e.target.value.trim() === '' || e.target.value < 1){\r\n                    return\r\n                }\r\n                e.preventDefault();\r\n\r\n                tags = [...tags, e.target.value.trim()];\r\n\r\n                tagsInput.value = '';\r\n\r\n                mostrarTags();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function mostrarTags(){\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag =>{\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n\r\n            })\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e){\r\n\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n\r\n        }\r\n\r\n        function actualizarInputHidden(){\r\n\r\n            tagsInputHidden.value = tags.toString();\r\n\r\n        }\r\n    \r\n    }\r\n\r\n})()"]}