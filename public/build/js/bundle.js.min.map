{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","target","name","value","horaPrevia","classList","remove","Object","values","includes","async","url","resultado","fetch","eventos","listadoHoras","forEach","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","id","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","onclick","appendChild","noResultados","mostrarPonentes","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"CAAA,WAGA,GAFAA,SAAAC,cAAA,UAEA,CAEA,IAAAC,EAAA,CACAC,aAAA,GACAC,IAAA,IAGA,MAAAC,EAAAL,SAAAC,cAAA,yBACAK,EAAAN,SAAAO,iBAAA,gBACAC,EAAAR,SAAAC,cAAA,mBACAQ,EAAAT,SAAAC,cAAA,oBAKA,SAAAS,EAAAC,GAEAT,EAAAS,EAAAC,OAAAC,MAAAF,EAAAC,OAAAE,MAGAL,EAAAK,MAAA,GACAN,EAAAM,MAAA,GACA,MAAAC,EAAAf,SAAAC,cAAA,8BACAc,GACAA,EAAAC,UAAAC,OAAA,6BAIAC,OAAAC,OAAAjB,GAAAkB,SAAA,KAOAC,iBACA,MAAAjB,IAAAA,EAAAD,aAAAA,GAAAD,EACAoB,EAAA,+BAAAlB,kBAAAD,IAEAoB,QAAAC,MAAAF,IAMA,SAAAG,GAEA,MAAAC,EAAA1B,SAAAO,iBAAA,aACAmB,EAAAC,QAAAC,GAAAA,EAAAZ,UAAAa,IAAA,+BAEA,MAAAC,EAAAL,EAAAM,IAAAC,GAAAA,EAAAC,SAGAC,EAAAC,MAAAC,KAAAV,GACAQ,EAAAG,OAAAT,IAAAE,EAAAV,SAAAQ,EAAAU,QAAAC,SACAZ,QAAAC,GAAAA,EAAAZ,UAAAC,OAAA,+BAGAjB,SAAAO,iBAAA,8CAEAoB,QAAAa,GAAAA,EAAAC,iBAAA,QAAAC,IAlBAC,OAFApB,EAAAqB,QATAC,GAiCA,SAAAH,EAAA/B,GAEA,MAAAI,EAAAf,SAAAC,cAAA,8BAEAc,GACAA,EAAAC,UAAAC,OAAA,6BAGAN,EAAAC,OAAAI,UAAAa,IAAA,6BACApB,EAAAK,MAAAH,EAAAC,OAAA0B,QAAAC,OACA/B,EAAAM,MAAAd,SAAAC,cAAA,wBAAAa,MA9DAT,EAAAoC,iBAAA,SAAA/B,GACAJ,EAAAqB,QAAAvB,GAAAA,EAAAqC,iBAAA,SAAA/B,KAhBA,GCAA,WACA,MAAAoC,EAAA9C,SAAAC,cAAA,aAEA,GAAA6C,EAAA,CACA,IAAAC,EAAA,GACAC,EAAA,GACA,MAAAC,EAAAjD,SAAAC,cAAA,qBACAiD,EAAAlD,SAAAC,cAAA,uBAqEA,SAAAkD,EAAAxC,GACA,MAAAyC,EAAAzC,EAAAC,OAGAyC,EAAArD,SAAAC,cAAA,4CAEAoD,GACAA,EAAArC,UAAAC,OAAA,2CAIAmC,EAAApC,UAAAa,IAAA,2CACAqB,EAAApC,MAAAsC,EAAAd,QAAAgB,WA3EAjC,iBAEA,MAEAkC,QAAA/B,MAFA,iBAQAgC,QALAD,EAAAX,OAMAG,EAAAS,EAAAzB,IAAAqB,IACA,CACAK,OAAA,GAAAL,EAAAK,OAAAC,UAAAN,EAAAO,SAAAD,SACAE,GAAAR,EAAAQ,MAJA,IAAAJ,EAdAK,GAEAf,EAAAL,iBAAA,SAqBA,SAAA9B,GACA,MAAAT,EAAAS,EAAAC,OAAAE,MAEA,GAAAZ,EAAA4D,QAAA,EAAA,CACA,MAAAC,EAAA,IAAAC,OAAA9D,EAAA,KACA8C,EAAAD,EAAAV,OAAAe,IACA,IAAA,GAAAA,EAAAK,OAAAQ,cAAAC,OAAAH,GACA,OAAAX,SAMAJ,EAAA,IAMA,WACA,KAAAC,EAAAkB,YACAlB,EAAAmB,YAAAnB,EAAAkB,YAGA,GAAAnB,EAAAc,OAAA,EACAd,EAAArB,QAAAyB,IACA,MAAAiB,EAAArE,SAAAsE,cAAA,MACAD,EAAArD,UAAAa,IAAA,6BACAwC,EAAAE,YAAAnB,EAAAK,OACAY,EAAA/B,QAAAgB,UAAAF,EAAAQ,GACAS,EAAAG,QAAArB,EAGAF,EAAAwB,YAAAJ,SAEA,CACA,MAAAK,EAAA1E,SAAAsE,cAAA,KACAI,EAAA1D,UAAAa,IAAA,kCACA6C,EAAAH,YAAA,qCAEAtB,EAAAwB,YAAAC,IAxBAC,OAhDA,GCAA,WAEA,MAAAC,EAAA5E,SAAAC,cAAA,eAEA,GAAA2E,EAAA,CAEA,MAAAC,EAAA7E,SAAAC,cAAA,SACA6E,EAAA9E,SAAAC,cAAA,iBAEA,IAAA8E,EAAA,GA8BA,SAAAC,IACAH,EAAAN,YAAA,GACAQ,EAAApD,QAAAsD,IACA,MAAAC,EAAAlF,SAAAsE,cAAA,MACAY,EAAAlE,UAAAa,IAAA,mBACAqD,EAAAX,YAAAU,EACAC,EAAAC,WAAAC,EACAP,EAAAJ,YAAAS,KAIAG,IAGA,SAAAD,EAAAzE,GAEAA,EAAAC,OAAAK,SACA8D,EAAAA,EAAA1C,OAAA4C,GAAAA,IAAAtE,EAAAC,OAAA2D,aACAc,IAIA,SAAAA,IAEAP,EAAAhE,MAAAiE,EAAAO,WAnDA,KAAAR,EAAAhE,QACAiE,EAAAD,EAAAhE,MAAAyE,MAAA,KACAP,KAKAJ,EAAAnC,iBAAA,YAEA,SAAA9B,GACA,GAAA,KAAAA,EAAA6E,QAAA,CAEA,GAAA,KAAA7E,EAAAC,OAAAE,MAAA4C,QAAA/C,EAAAC,OAAAE,MAAA,EACA,OAEAH,EAAA8E,iBAEAV,EAAA,IAAAA,EAAApE,EAAAC,OAAAE,MAAA4C,QAEAkB,EAAA9D,MAAA,GAEAkE,SAjCA","file":"bundle.js","sourcesContent":["(function(){\r\n    const horas = document.querySelector('#horas')\r\n\r\n    if(horas){\r\n\r\n        let busqueda = {\r\n            categoria_id: '',\r\n            dia: ''\r\n        }\r\n\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n        \r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach( dia => dia.addEventListener('change', terminoBusqueda));\r\n\r\n        function terminoBusqueda(e){\r\n            \r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            //Reiniciar los campos ocultos y el selector de horas\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n            if(horaPrevia){\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n            \r\n            if(Object.values(busqueda).includes('')){\r\n                return;\r\n            }\r\n            buscarEventos();\r\n\r\n        }\r\n\r\n        async function buscarEventos(){\r\n            const {dia, categoria_id} = busqueda;\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n            \r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n            \r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos){\r\n            //Reiniciar horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'))\r\n            //Comprobar eventos ya tomados, y quitar la variable de deshabilitado\r\n            const horasTomadas = eventos.map( evento => evento.hora_id);\r\n            \r\n            \r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\r\n            resultado.forEach( li=> li.classList.remove('horas__hora--deshabilitada'));\r\n\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)')\r\n            \r\n            horasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora));\r\n\r\n        }\r\n\r\n        function seleccionarHora(e){\r\n            //Deshabilitar hora previa si hay nuevo click\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n\r\n            if(horaPrevia){\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n            //Agregar clase de seleccionado\r\n           e.target.classList.add('horas__hora--seleccionada');\r\n           inputHiddenHora.value = e.target.dataset.horaId;\r\n           inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n        }\r\n    }\r\n\r\n})();","(function(){\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n    \r\n    if(ponentesInput){\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n        const listadoPonentes = document.querySelector('#listado-ponentes');\r\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]')\r\n        \r\n        obtenerPonentes();\r\n\r\n        ponentesInput.addEventListener('input', buscarPonentes)\r\n\r\n        async function obtenerPonentes(){\r\n\r\n            const url = `/api/ponentes`;\r\n            \r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            \r\n            formatearPonentes(resultado);\r\n        }\r\n\r\n        function formatearPonentes(arrayPonentes){\r\n            ponentes = arrayPonentes.map( ponente => {\r\n                return{\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            })\r\n        }\r\n\r\n        function buscarPonentes(e){\r\n            const busqueda = e.target.value;\r\n\r\n            if(busqueda.length >= 3){\r\n                const expresion = new RegExp(busqueda, \"i\");\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if(ponente.nombre.toLowerCase().search(expresion) != -1){\r\n                        return ponente;\r\n                    }\r\n                \r\n                })\r\n\r\n            }else{\r\n                ponentesFiltrados = [];\r\n            }\r\n\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function mostrarPonentes(){\r\n            while(listadoPonentes.firstChild){\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n            }\r\n            \r\n            if(ponentesFiltrados.length > 0 ){\r\n                ponentesFiltrados.forEach( ponente => {\r\n                    const ponenteHTML = document.createElement('LI');\r\n                    ponenteHTML.classList.add('listado-ponentes__ponente');\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id;\r\n                    ponenteHTML.onclick = seleccionarPonente;\r\n\r\n                //Aniadir al DOM\r\n                listadoPonentes.appendChild(ponenteHTML);\r\n                })\r\n            }else{\r\n                const noResultados = document.createElement('P');\r\n                noResultados.classList.add('listado-ponentes__no-resultado')\r\n                noResultados.textContent = 'No hay resultados para tu busqueda'\r\n\r\n                listadoPonentes.appendChild(noResultados);\r\n            }\r\n        }\r\n\r\n        function seleccionarPonente(e){\r\n            const ponente = e.target;\r\n\r\n            //Remover la clase previa\r\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado')\r\n\r\n            if(ponentePrevio){\r\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n            }\r\n\r\n\r\n            ponente.classList.add('listado-ponentes__ponente--seleccionado');\r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n        }\r\n    }\r\n\r\n})();","(function (){\r\n    \r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    if(tagsInput){\r\n\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = []; \r\n\r\n        //Recuperar del input oculto\r\n        if(tagsInputHidden.value !== ''){\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n\r\n        }\r\n\r\n        //Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag)\r\n    \r\n        function guardarTag(e){\r\n            if(e.keyCode === 44){\r\n\r\n                if(e.target.value.trim() === '' || e.target.value < 1){\r\n                    return\r\n                }\r\n                e.preventDefault();\r\n\r\n                tags = [...tags, e.target.value.trim()];\r\n\r\n                tagsInput.value = '';\r\n\r\n                mostrarTags();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function mostrarTags(){\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag =>{\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n\r\n            })\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e){\r\n\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n\r\n        }\r\n\r\n        function actualizarInputHidden(){\r\n\r\n            tagsInputHidden.value = tags.toString();\r\n\r\n        }\r\n    \r\n    }\r\n\r\n})()"]}